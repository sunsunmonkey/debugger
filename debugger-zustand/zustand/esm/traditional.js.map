{"version":3,"file":"traditional.js","sources":["../../src/traditional.ts"],"sourcesContent":["// import { useDebugValue } from 'react'\n// import { useSyncExternalStoreWithSelector } from 'use-sync-external-store/shim/with-selector'\n// Those don't work in ESM, because React libs are CJS only.\n// See: https://github.com/pmndrs/valtio/issues/452\n// The following is a workaround until ESM is supported.\n// eslint-disable-next-line import/extensions\nimport ReactExports from 'react'\n// eslint-disable-next-line import/extensions\nimport useSyncExternalStoreExports from 'use-sync-external-store/shim/with-selector'\nimport { createStore } from './vanilla.ts'\nimport type {\n  Mutate,\n  StateCreator,\n  StoreApi,\n  StoreMutatorIdentifier,\n} from './vanilla.ts'\n\nconst { useDebugValue } = ReactExports\nconst { useSyncExternalStoreWithSelector } = useSyncExternalStoreExports\n\ntype ExtractState<S> = S extends { getState: () => infer T } ? T : never\n\ntype ReadonlyStoreApi<T> = Pick<StoreApi<T>, 'getState' | 'subscribe'>\n\ntype WithReact<S extends ReadonlyStoreApi<unknown>> = S & {\n  /** @deprecated please use api.getInitialState() */\n  getServerState?: () => ExtractState<S>\n}\n\nconst identity = <T>(arg: T): T => arg\n\nexport function useStoreWithEqualityFn<S extends WithReact<StoreApi<unknown>>>(\n  api: S,\n): ExtractState<S>\n\nexport function useStoreWithEqualityFn<\n  S extends WithReact<StoreApi<unknown>>,\n  U,\n>(\n  api: S,\n  selector: (state: ExtractState<S>) => U,\n  equalityFn?: (a: U, b: U) => boolean,\n): U\n\nexport function useStoreWithEqualityFn<TState, StateSlice>(\n  api: WithReact<StoreApi<TState>>,\n  selector: (state: TState) => StateSlice = identity as any,\n  equalityFn?: (a: StateSlice, b: StateSlice) => boolean,\n) {\n  const slice = useSyncExternalStoreWithSelector(\n    api.subscribe,\n    api.getState,\n    api.getServerState || api.getInitialState,\n    selector,\n    equalityFn,\n  )\n  useDebugValue(slice)\n  return slice\n}\n\nexport type UseBoundStoreWithEqualityFn<\n  S extends WithReact<ReadonlyStoreApi<unknown>>,\n> = {\n  (): ExtractState<S>\n  <U>(\n    selector: (state: ExtractState<S>) => U,\n    equalityFn?: (a: U, b: U) => boolean,\n  ): U\n} & S\n\ntype CreateWithEqualityFn = {\n  <T, Mos extends [StoreMutatorIdentifier, unknown][] = []>(\n    initializer: StateCreator<T, [], Mos>,\n    defaultEqualityFn?: <U>(a: U, b: U) => boolean,\n  ): UseBoundStoreWithEqualityFn<Mutate<StoreApi<T>, Mos>>\n  <T>(): <Mos extends [StoreMutatorIdentifier, unknown][] = []>(\n    initializer: StateCreator<T, [], Mos>,\n    defaultEqualityFn?: <U>(a: U, b: U) => boolean,\n  ) => UseBoundStoreWithEqualityFn<Mutate<StoreApi<T>, Mos>>\n}\n\nconst createWithEqualityFnImpl = <T>(\n  createState: StateCreator<T, [], []>,\n  defaultEqualityFn?: <U>(a: U, b: U) => boolean,\n) => {\n  const api = createStore(createState)\n\n  const useBoundStoreWithEqualityFn: any = (\n    selector?: any,\n    equalityFn = defaultEqualityFn,\n  ) => useStoreWithEqualityFn(api, selector, equalityFn)\n\n  Object.assign(useBoundStoreWithEqualityFn, api)\n\n  return useBoundStoreWithEqualityFn\n}\n\nexport const createWithEqualityFn = (<T>(\n  createState: StateCreator<T, [], []> | undefined,\n  defaultEqualityFn?: <U>(a: U, b: U) => boolean,\n) =>\n  createState\n    ? createWithEqualityFnImpl(createState, defaultEqualityFn)\n    : createWithEqualityFnImpl) as CreateWithEqualityFn\n"],"names":[],"mappings":";;;;AAiBA,MAAM,EAAE,eAAkB,GAAA,YAAA,CAAA;AAC1B,MAAM,EAAE,kCAAqC,GAAA,2BAAA,CAAA;AAW7C,MAAM,QAAA,GAAW,CAAI,GAAc,KAAA,GAAA,CAAA;AAe5B,SAAS,sBACd,CAAA,GAAA,EACA,QAA0C,GAAA,QAAA,EAC1C,UACA,EAAA;AACA,EAAA,MAAM,KAAQ,GAAA,gCAAA;AAAA,IACZ,GAAI,CAAA,SAAA;AAAA,IACJ,GAAI,CAAA,QAAA;AAAA,IACJ,GAAA,CAAI,kBAAkB,GAAI,CAAA,eAAA;AAAA,IAC1B,QAAA;AAAA,IACA,UAAA;AAAA,GACF,CAAA;AACA,EAAA,aAAA,CAAc,KAAK,CAAA,CAAA;AACnB,EAAO,OAAA,KAAA,CAAA;AACT,CAAA;AAuBA,MAAM,wBAAA,GAA2B,CAC/B,WAAA,EACA,iBACG,KAAA;AACH,EAAM,MAAA,GAAA,GAAM,YAAY,WAAW,CAAA,CAAA;AAEnC,EAAM,MAAA,2BAAA,GAAmC,CACvC,QACA,EAAA,UAAA,GAAa,sBACV,sBAAuB,CAAA,GAAA,EAAK,UAAU,UAAU,CAAA,CAAA;AAErD,EAAO,MAAA,CAAA,MAAA,CAAO,6BAA6B,GAAG,CAAA,CAAA;AAE9C,EAAO,OAAA,2BAAA,CAAA;AACT,CAAA,CAAA;AAEa,MAAA,oBAAA,GAAwB,CACnC,WACA,EAAA,iBAAA,KAEA,cACI,wBAAyB,CAAA,WAAA,EAAa,iBAAiB,CACvD,GAAA;;;;"}